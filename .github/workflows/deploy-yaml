name: React-template CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest # GitHub Actions에서 작업이 실행될 환경을 지정

    strategy: # 아래 내용에서 변수처럼 쓰이는 부분
      matrix: # 여러 환경 설정을 병렬로 실행하기 위해 사용하는 기능
        node-version: [ 20.x ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.OS }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-

      - name: Create env file
        run: |
          echo "NODE_ENV=production" >> .env
          echo "VITE_BRANCH=MS-GANGNAM" >> .env
          echo "VITE_AUTH_TOKEN=MS-Auth-Token" >> .env
          echo "VITE_API_URL=https://feynman-dev.mementoai.io/crm" >> .env

      - name: Install Yarn Berry
        run: yarn set version berry

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build
        run: yarn build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Upload to S3
        env:
          BUCKET_NAME: ${{ secrets.AWS_STAGING_BUCKET_NAME}}
        run: |
          aws s3 sync \
            ./dist s3://$BUCKET_NAME

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.DEV_DISTRIBUTION_ID }} --paths "/*"